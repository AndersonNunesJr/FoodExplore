generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  name        String
  password    String
  Role        Role?        @relation(fields: [roleId], references: [id])
  roleId      String?
  marketplace Marketplace? // Relação com o marketplace do usuário
  favorits    Favorites[] // Nova relação com Favorits
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt

  @@map("users")
}

model Role {
  id   String @id @default(uuid())
  name String @unique
  user User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt
}

model Marketplace {
  id        String     @id @default(uuid())
  storename String?    @unique
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String     @unique
  Products  Products[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt

  @@unique([userId], name: "UniqueUserMarketplace", map: "unique_marketplace_userId")
  @@map("markets-place")
}

model Products {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  price       String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt

  Marketplace   Marketplace? @relation(fields: [marketplaceId], references: [id], onDelete: Cascade)
  marketplaceId String?
}

model Favorites {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}
