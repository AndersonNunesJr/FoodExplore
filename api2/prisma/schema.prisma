generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  Role        Role?        @relation(fields: [roleId], references: [id])
  roleId      String?
  marketplace Marketplace? // Relação com o marketplace do usuário
  favorits    Favorits[] // Nova relação com Favorits

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Role {
  id   String @id @default(uuid())
  name String @unique
  user User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt
}

// model Marketplace {
//   id        String @id @default(uuid())
//   storename String @unique
//   user      User   @relation(fields: [userId], references: [id])
//   userId    Int    @unique

//   createdAt DateTime   @default(now()) @map("created_at")
//   updatedAt DateTime   @updatedAt
//   Products  Products[]

//   @@unique([userId], name: "UniqueUserMarketplace", map: "unique_marketplace_userId")
//   @@map("markets-place")
// }

model Marketplace {
  id        String @id @default(uuid())
  storename String @unique
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique

  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt
  Products  Products[]

  @@unique([userId], name: "UniqueUserMarketplace", map: "unique_marketplace_userId")
  @@map("markets-place")
}

model Products {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  price       String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt

  marketplace   Marketplace? @relation(fields: [marketplaceId], references: [id])
  marketplaceId Int?
}

model Favorits {
  id     String @id @default(uuid())
  user   User?  @relation(fields: [userId], references: [id])
  userId Int?
}
