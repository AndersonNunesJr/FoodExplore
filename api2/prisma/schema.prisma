generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  name        String
  password    String
  Role        Role?        @relation(fields: [roleId], references: [id])
  roleId      String?
  marketplace Marketplace?
  favorites   Favorite?
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt
  historic    Historic[]

  @@map("users")
}

model Role {
  id   String @id @default(uuid())
  name String @unique
  user User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt
}

model Marketplace {
  id             String  @id @default(uuid())
  storename      String? @unique
  user           User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String  @unique
  profilePicture String?
  description    String?

  products Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt

  historic Historic[]

  @@unique([userId], name: "UniqueUserMarketplace", map: "unique_marketplace_userId")
  @@map("markets-place")
}

model Product {
  id          String   @id @default(uuid())
  title       String
  category    String?
  tag         String?
  description String?
  price       String
  productImg  String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt

  marketplace   Marketplace? @relation(fields: [marketplaceId], references: [id], onDelete: Cascade)
  marketplaceId String?

  favorites Favorite[]
}

// @@unique([id, marketplaceId])
model Favorite {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  products Product[]
}

model Orders {
  id      String @id @default(uuid())
  status  String
  code    String @unique @default(cuid())
  details String

  createdAt DateTime @default(now()) @map("created_at")

  historicId String
  historic   Historic @relation(fields: [historicId], references: [id], onDelete: Cascade)

  @@unique([historicId, code])
}

model Historic {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  marketplace   Marketplace @relation(fields: [marketplaceId], references: [id], onDelete: Cascade)
  marketplaceId String

  orders Orders[]

  @@unique([userId, marketplaceId])
}
